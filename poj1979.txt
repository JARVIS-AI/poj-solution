/*
  '.' - a black tile 
  '#' - a red tile 
  '@' - a man on a black tile
  他只能在黑色的砖块上面走
  Write a program to count the number of black tiles which he can reach by repeating the moves 
  described above.
*/
#include<iostream>
#include<string.h>
using namespace std;
int n, m,ans;
char maze[21][21];
int dfs(int x, int y)
{
	//查找从（x，y）开始的可以移动的黑色的数量
	maze[x][y] = '-';
	//left
	if (x >= 1 && maze[x - 1][y] == '.')
	{
		ans++;
		maze[x - 1][y] = '-';
		dfs(x - 1, y);
	}
	//right
	if (x < m - 1 && maze[x + 1][y] == '.')
	{
		ans++;
		maze[x + 1][y] = '-';
		dfs(x + 1, y);
	}
	//up
	if (y >= 1 && maze[x][y - 1] == '.')
	{
		ans++;
		maze[x][y - 1] = '-';
		dfs(x, y - 1);
	}
	//down
	if (y < n - 1 && maze[x][y + 1] == '.')
	{
		ans++;
		maze[x][y + 1] = '-';
		dfs(x, y + 1);
	}
	return ans;
}
int main()
{
	while (cin >> n >> m)
	{
		if (n + m == 0) break;
		ans = 1;
		int sx, sy;
		for (int i = 0; i < m; i++){
			for (int j = 0; j < n; j++){
				cin >> maze[i][j];
				if (maze[i][j] == '@')
				{
					sx = i, sy = j;
				}
			}
		}
		dfs(sx, sy);
		cout << ans << endl;
	}
	return 0;
}