/*
  题意：判断输入的是不是一棵树
  思路：并查集
*/
#include<iostream>
using namespace std;
int par[101];
bool vis[101];
void init()
{
	for (int i = 0; i < 101; i++)
	{
		par[i] = i;
		vis[i] = false;
	}
}
int find(int x)
{
	if (par[x] == x)
	{
		return x;
	}
	else{
		return par[x] = find(par[x]);
	}
}
void unite(int x, int y)
{
	x = find(x);
	y = find(y);
	if (x != y)
	{
		par[x] = y;
	}
}
int main()
{
	int parten, child,cas=1;
	while (cin >> parten >> child)
	{
		if (parten == -1) break;
		if (parten == 0 && child == 0)
		{
			//这是一棵空树，但是也是树
			cout << "Case " << cas++ << " is a tree." << endl;
			continue;
		}
		init();
		vis[parten] = true;
		vis[child] = true;
		int root = parten;
		bool ans=true;
		if (parten == child)
		{
			//自己是自己的父亲，不对啊
			ans = false;
		}
		while (cin >> parten >> child)
		{
			if (parten== 0) break;
			vis[parten] = true;
			vis[child] = true;
			if (find(parten) == find(child))
			{
				ans = false;
			}
			unite(parten, child);
		}
		//看是不是森林啊
		for (int i = 0; i < 101; i++)
		{
			if (vis[i] && find(i) != find(root))
			{
				ans = false;
				break;
			}
		}
		if (ans)
		{
			cout << "Case " << cas++ << " is a tree." << endl;
		}
		else{
			cout << "Case " << cas++ << " is not a tree." << endl;
		}
	}
	return 0;
}