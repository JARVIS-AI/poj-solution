/*
 @poj 3602
 就是计算一个输入的字符串中共有多少不同的字符
 特别的，有一些字符可以组合在一起然后只算一个
 “ff”, “fi”, “ffi”, “fl”, and “ffl”
 双引号也只算一个字符,空格是不算的 "和"是不一样的
*/
#include<stdio.h>
#include<string.h>
char s[1000];
int count[257];
int ff[7];
int len;
void solve(){
	int ans = 0;
	memset(count, 0, sizeof(count));
	memset(ff, 0, sizeof(ff));
	/*
	 ff[7]={ff,fi,ffi,fl,ffl,\\,""}
	*/
	for (int i = 0; i<len; i++){
		if (s[i] == 'f'){//start if 1
			if (s[i + 1] == 'f' && (s[i + 2] == 'i' || s[i + 2] == 'l')){
				if (s[i + 2] == 'i'){
					ff[2]++;
				}
				if (s[i + 2] == 'l'){
					ff[4]++;
				}
				i += 2;
			}
			else if (s[i + 1] == 'f'){
				ff[0]++;
				i += 1;
			}
			else if (s[i + 1] == 'i' || s[i + 1] == 'l'){
				if (s[i + 1] == 'i')ff[1]++;
				if (s[i + 1] == 'l')ff[3]++;
				i++;
			}
			else count[s[i]]++;
		}//endif 1
		else if (s[i] == '`' && s[i + 1] == '`'){
			ff[6]++;
			i++;
		}
		//left single and double quotes differ from their right counterparts
		else if (s[i] == '\'' && s[i + 1] == '\''){
			ff[5]++;
			i++;
		}
		else count[s[i]]++;
	}//endfor
	for (int i = 0; i <= 256; i++){
		if (count[i])ans++;
	}
	for (int i = 0; i<7; i++)if (ff[i])ans++;
	printf_s("%d\n", ans);
}
int main(){
	char c;
	len = 0;
	while (scanf_s("%c", &c) != EOF){
		if (c == ' ' || c == '\n')continue;
		s[len++] = c;
	}
	solve();
}
