#include <iostream>
#include <stdio.h>
#include <string>
using namespace std;
char op[4] = { '+', '-', '*', '/' };
double calc(double a, int opnum, double b)
{
	switch (op[opnum])
	{
	case '+':
		return a + b;
		break;
	case '-':
		return a - b;
		break;
	case '*':
		return a*b;
		break;
	case '/':
		return a / b;
		break;
	}
}
bool calculator(int i, int j, int k, double a, double b, double c, double d)
{
	//对于确定的四种运算符序列，共5种加括号的方式

	/*
	  1.(a b)(c d)......5
	  2.(((ab)c)d)).....-1
	  3.((a(b c))d).....4
	  4.(a((b c)d)).....3
      5.(a(b(c d)))......1	
	*/

	if (calc(calc(a, i, b), j, calc(c, k, d)) - 24.0 == 0)
	{
		printf("(%.0lf%c%.0lf)%c(%.0lf%c%.0lf)\n", a, op[i], b, op[j], c, op[k], d);
		return 1;
	}
	if (calc(calc(calc(a, i, b), j, c), k, d) - 24.0 == 0)
	{
		printf("((%.0lf%c%.0lf)%c%.0lf)%c%.0lf)\n", a, op[i], b, op[j], c, op[k], d);
		return 1;
	}
	if (calc(calc(a, i, calc(b, j, c)), k, d) - 24.0 == 0)
	{
		printf("(%.0lf%c(%.0lf%c%.0lf))%c%.0lf)\n", a, op[i], b, op[j], c, op[k], d);
		return 1;
	}
	if (calc(a, i, calc(calc(b, j, c), k, d)) - 24.0 == 0)
	{
		printf("%.0lf%c((%.0lf%c%.0lf)%c%.0lf)\n", a, op[i], b, op[j], c, op[k], d);
		return 1;
	}
	if (calc(a, i, calc(b, j, calc(c, k, d))) == 24.0)
	{
		printf("%.0lf%c(%.0lf%c(%.0lf%c%.0lf))\n", a, op[i], b, op[j], c, op[k], d);
		return 1;
	}
	return 0;
}
int main()
{
	double a, b, c, d;
	Start:
	while (scanf("%lf %lf %lf %lf", &a, &b, &c, &d) != EOF)
	{
		//暴力枚举运算符序列 4*4*4=64种
		for (int i = 0; i < 4; i++)
		{
			for (int j = 0; j < 4; j++)
			{
				for (int k = 0; k < 4; k++)
				{
					if (calculator(i, j, k, a, b, c, d) == 1)
						goto Start;
				}
			}
		}
	}
	return 0;
}